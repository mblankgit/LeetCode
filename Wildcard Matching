public class Solution {    public boolean isMatch(String s, String p) {        // Start typing your Java solution below        // DO NOT write main() function        if(s == null || p == null){            return false;        }        return match(s,p);    }            boolean match(String s, String p){        int is = 0;        int ip = 0;        int marks = -1;        int markp = -1;        int times = 2;        while(is != s.length()){            if(ip != p.length() && (s.charAt(is) == p.charAt(ip) || p.charAt(ip) == '?')){is++;ip++;continue;}            if(ip != p.length() && p.charAt(ip) == '*'){                marks = is;                markp = ip++;                continue;            }            if(markp != -1){                ip = markp + 1;                is = ++marks;                continue;            }            return false;        }        while(ip != p.length() && p.charAt(ip) == '*'){            ip++;        }        return ip == p.length();    }        // will tle with large dataset        boolean match(String s, int indexs,String p, int indexp){        if(indexs == s.length() && indexp == p.length()){            return true;        }        if(indexs != s.length() && indexp == p.length()){            return false;        }        if(indexs == s.length() && p.charAt(indexp) == '*'){            return match(s,indexs,p,indexp+1);        }else if(indexs == s.length() && p.charAt(indexp) != '*'){            return false;        }        if(p.charAt(indexp) == '?' || p.charAt(indexp) == s.charAt(indexs)){            return match(s,indexs+1,p,indexp+1);        }        if(p.charAt(indexp) == '*'){            return match(s,indexs+1,p,indexp+1)|| match(s,indexs+1,p,indexp) || match(s,indexs,p,indexp+1);        }        return false;            }}