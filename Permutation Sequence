public class Solution {
    public String getPermutation(int n, int k) {
        // Start typing your Java solution below
        // DO NOT write main() function
        if( n <= 0 ){
            return "";
        }
        
        int[] pre = new int[10];
        pre[0] = 1;
        for(int i = 1; i < 10;i++){
            pre[i] = pre[i-1] * i;
        }
        List<Integer> lefts = new ArrayList<Integer>();
        for(int i = 1; i <= n ; i++){
            lefts.add(i);
        }
        StringBuffer res = new StringBuffer();
        while(k > 1){
            int cur = k / pre[n-1];
            k = k % pre[n-1];
            if(k == 0){
                res.append(lefts.get(cur-1));
                lefts.remove(cur-1);
                k = pre[n-1];
            }else{
                res.append(lefts.get(cur));
                lefts.remove(cur);
            }
            n--;
        }
        for(int i = 0; i < lefts.size();i++){
            res.append("" + lefts.get(i));
        }
        return res.toString();
    }
}