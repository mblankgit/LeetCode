/**
 * Definition for an interval.
 * public class Interval {
 *     int start;
 *     int end;
 *     Interval() { start = 0; end = 0; }
 *     Interval(int s, int e) { start = s; end = e; }
 * }
 */
 
 
 class cmp implements Comparator<Interval>{
    public int compare(Interval a ,Interval b){
		if(a.start > b.start){
    	    return 1;   
		}else if(a.start < b.start){
    	 return -1;   
		}else{
    	    return 0;   
		}
	}
}
 
public class Solution { 
    
    
    public ArrayList<Interval> merge(ArrayList<Interval> intervals) {
        // Start typing your Java solution below
        // DO NOT write main() function
        ArrayList<Interval> res = new ArrayList<Interval>();
        
        
        int n = intervals.size();
        if( n<= 1){
            return intervals;
        }
        
        // sort the intervals
        Collections.sort(intervals,new cmp());

        res.add(intervals.get(0));
        for(int i = 1; i< n;i++){
            if(intervals.get(i).start >= res.get(res.size() -1).start && intervals.get(i).start <= res.get(res.size() -1).end){
                if(intervals.get(i).end >= res.get(res.size() -1).end){
                    res.get(res.size() -1).end = intervals.get(i).end;
                }
            }else{
                res.add(intervals.get(i));
            }
        }
        return res;
    }
}