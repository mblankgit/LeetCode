public class Solution {
    public ArrayList<ArrayList<Integer>> subsets(int[] S) {
        // Start typing your Java solution below
        // DO NOT write main() function
        ArrayList<ArrayList<Integer>> res = new ArrayList<ArrayList<Integer>>();
        if(S == null || S.length == 0){
            return res;
        }
        Arrays.sort(S);
        res.add(new ArrayList<Integer>());
        return combine(S,0,res);
    }
    
    ArrayList<ArrayList<Integer>> combine(int[] s, int index,ArrayList<ArrayList<Integer>> res){
        if(index == s.length){
            return res;
        }
        
        ArrayList<ArrayList<Integer>> tmps = new ArrayList<ArrayList<Integer>>(res);
        for(ArrayList<Integer> tmp : res){
            ArrayList<Integer> dm = new ArrayList<Integer>(tmp);
            dm.add(s[index]);
            tmps.add(dm);
        }
        
        return combine(s,index+1,tmps);
    }
}


/// with iterator
 public ArrayList<ArrayList<Integer>> subsets(int[] S) {
        // Start typing your Java solution below
        // DO NOT write main() function
        ArrayList<ArrayList<Integer>> res = new ArrayList<ArrayList<Integer>>();
        if(S == null || S.length == 0){
            return res;
        }
        Arrays.sort(S);
        res.add(new ArrayList<Integer>());
        for(int i = 0 ; i < S.length; i++){
            int size = res.size();
            for(int j = 0 ; j < size; j++){
                ArrayList<Integer> tmp = new ArrayList<Integer>(res.get(j));
                tmp.add(S[i]);
                res.add(tmp);
            }
        }
        return res;
    }