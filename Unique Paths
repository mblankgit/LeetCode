public class Solution {
    public int uniquePaths(int m, int n) {
        // Start typing your Java solution below
        // DO NOT write main() function
        if(m == 0 || n == 0){
            return 1;
        }
        return dp(m,n);
    }
    
    int dp(int m,int n){
        int[][] res = new int[m][n];
        for(int i = 0;i < m ; i++){
            for(int j = 0 ; j< n;j++){
                if(i == 0 || j == 0 ){
                    res[i][j] = 1;
                }else{
                    res[i][j] = res[i-1][j] + res[i][j-1];
                }
            }
        }
        return res[m-1][n-1];
    }
    
    
    
    ///dfs will exceed the large dataset
    int dfs(int m, int n, int x,int y){
        if(x == m && n == y){
            return 1;
        }
        int right = 0;
        if( x + 1 <= m){
            right = dfs(m,n,x+1,y);
        }
        int down = 0;
        if(y+1 <= n){
            down = dfs(m,n,x,y+1);
        }
        return right + down;
    }
    
}