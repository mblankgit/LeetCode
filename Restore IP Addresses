public class Solution {
    public ArrayList<String> restoreIpAddresses(String s) {
        // Start typing your Java solution below
        // DO NOT write main() function
        ArrayList<String> res = new ArrayList<String>();
        if(s == null || s.length() == 0 || s.length() > 12){
            return res;
        }
        StringBuffer add = new StringBuffer();
        dfs(s,0,4,add,res);
        return res;
    }
    
    void dfs(String s, int index, int len,StringBuffer add, ArrayList<String> res){
        if(index == s.length() && len == 0){
            res.add(add.toString());
            return;
        }
        if(len < 0 || index >= s.length() ){
            return;
        }
        
        StringBuffer tmp = new StringBuffer();
        for(int i = 0;i <  3 && index + i < s.length(); i++){
            if(valid(s,index,index + i)){
                tmp = new StringBuffer(add);
                if(add.length() == 0){
                    add.append(s.substring(index,i+index+1));
                }else{
                    add.append("." + s.substring(index,i+index+1));
                }
                dfs(s,index + i +1,len-1,add,res);
                add = tmp;
            }
        }
        
    }
    
    boolean valid(String s, int start ,int end){
        int res = 0;
        if(end - start > 0  && s.charAt(start) == '0'){
            return false;   
        }
        for(int i = start ; i <= end; i++){
            res = res * 10 + (int)(s.charAt(i) - '0');
        }
        if(res >= 0 && res < 256){
            return true;
        }
        return false;
    }
    
}