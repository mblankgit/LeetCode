public class Solution {
    public int largestRectangleArea(int[] height) {
        // Start typing your Java solution below
        // DO NOT write main() function
        if(height == null || height.length == 0){
            return 0;
        }
        int max = 0;
        Stack<Integer> sts = new Stack<Integer>();
        int i = 0;
        for(i = 0 ; i < height.length; i++){
            if(sts.empty() || height[sts.peek()] <= height[i]){
                sts.push(i);
            }else{
                while(!sts.empty() && height[sts.peek()] > height[i]){
                    int size = height[sts.pop()] * (sts.empty() ? i: i - sts.peek() - 1);
                    if(size > max){
                        max = size;
                    }
                }
                sts.push(i);
            }
        }
        
        while(!sts.empty()){
            int size = height[sts.pop()] * (sts.empty()? i:i - sts.peek() - 1);
            if(size > max){
                max = size;
            }
        }
        return max;      
    }
}