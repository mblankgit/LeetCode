/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode partition(ListNode head, int x) {
        // Start typing your Java solution below
        // DO NOT write main() function
        if(head == null){
            return head;
        }
        
        ListNode sroot = null;
        ListNode stail = null;
        ListNode btail = null;
        ListNode broot = null;
        while(head != null){
            if(head.val >= x){
                if(broot == null){
                    btail = head;
                    broot = head;
                }else{
                    btail.next = head;
                    btail = btail.next;
                }
            }else{
                if(sroot == null){
                    sroot = head;
                    stail = head;
                }else{
                    stail.next = head;
                    stail = stail.next;
                }
            }
            head = head.next;
        }
        if(stail != null){
            stail.next = broot;
        }else{
            return broot;
        }
        if(btail != null){
            btail.next = null;
        }
        return sroot;
    }
}