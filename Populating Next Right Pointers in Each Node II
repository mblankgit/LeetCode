/**
 * Definition for binary tree with next pointer.
 * public class TreeLinkNode {
 *     int val;
 *     TreeLinkNode left, right, next;
 *     TreeLinkNode(int x) { val = x; }
 * }
 */
public class Solution {
    public void connect(TreeLinkNode root) {
        // Start typing your Java solution below
        // DO NOT write main() function
        if(root == null){
            return ;
        }
        
        int lnum = 0;
        int cnum = 1;
        int level = 0;
        Queue<TreeLinkNode> nodes = new LinkedList<TreeLinkNode>();
        nodes.add(root);
        TreeLinkNode tail = null;
        while(nodes.peek()!=null){
            TreeLinkNode node = nodes.poll();
            
            if(node.left != null){
                nodes.add(node.left);
                lnum++;
            }
            if(node.right != null){
                nodes.add(node.right);
                lnum++;
            }

            if(tail == null){
                tail = node;
            }else{
                tail.next = node;
                tail = tail.next;
            }
            cnum--;
            if(cnum == 0){
                node.next = null;
                tail = null;
                cnum = lnum;
                lnum = 0;
                level++;
            }
        }
    }
}